{"version":3,"sources":["component/HeaderComp.js","screens/Homepage.js","component/TimelineElement.js","component/SearchByProfile.js","component/SearchByRepo.js","screens/GitScout.js","component/WebCamCapture.js","component/ImageFilter.jsx","utils/Api.js","screens/ImageEffects.js","screens/GetCard.js","App.js","index.js"],"names":["HeaderComp","useEffect","document","querySelectorAll","forEach","item","addEventListener","hoverin","hoverout","event","children","target","style","transform","className","to","Homepage","paddingTop","Card","Group","centered","color","link","raised","href","Content","display","flexDirection","justifyContent","alignItems","Header","Icon","name","size","Description","padding","baseStyle","fontWeight","flexWrap","paddingBottom","bstyle","maxWidth","border","borderRadius","textAlign","background","TimelineElement","repo","repos","repositories","map","value","index","key","id","contentStyle","contentArrowStyle","borderRight","date","created_at","slice","split","reverse","join","iconStyle","icon","description","html_url","rel","SearchByProfile","useState","data","setData","setRepositories","username","setUsername","submitHandler","e","a","preventDefault","fetch","profile","json","profileJson","repos_url","repoJson","flex","placeholder","type","onChange","onClick","length","Image","floated","src","avatar_url","alt","bio","extra","location","SearchByRepo","props","React","inputValue","setInputValue","isLoading","setIsLoading","error","setError","setRepos","then","response","console","log","items","catch","err","onSubmit","evt","elements","query","Loader","active","inline","List","divided","animated","Item","verticalAlign","as","GitScout","ui","setUI","Button","visible","hidden","WebCamCapture","width","height","facingMode","videoConstants","webcamRef","useRef","captureImage","useCallback","saveCapturedImage","current","getScreenshot","Grid","container","spacing","xs","ref","audio","screenshotFormat","videoConstraints","variant","align","ImageFilter","label","effects","render","setrender","applyEffect","effect","api_end_point","image_data","method","headers","body","JSON","stringify","i","md","CardHeader","title","CardContent","Divider","ImageEffects","inputType","setInputType","imageUrl","setImageUrl","setImage_data","handleInputType","Container","marginRight","Typography","component","Input","autoFocus","imageDataURI","encodeFromURL","res","GetCard","cardData","setcardData","setUi","Form","FormData","get","widths","TextArea","post_link","first_name","last_name","post_topic","post_desc","NotFound","fontSize","App","exact","path","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f4ac37fb.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport './styles/headerStyle.css';\r\n\r\nconst HeaderComp = () => {\r\n    // const [state, setstate] = useState('');\r\n\r\n    useEffect(() => {\r\n        const navItems = document.querySelectorAll('.nav-wrapper');\r\n         navItems.forEach(item => {\r\n            item.addEventListener('mouseenter', hoverin);\r\n            item.addEventListener('mouseleave', hoverout);\r\n         })\r\n        }, [])\r\n\r\n\r\n    const hoverin  =(event) => {\r\n        const { children } = event.target;\r\n        children[1].style.transform=\"translate(60px, 30px)\"\r\n        children[2].style.transform=\"translate(120px, 60px)\"\r\n      }\r\n    \r\n    const hoverout = (event) => {\r\n        const { children } = event.target;\r\n        children[1].style.transform=\"translate(0, 0)\"\r\n        children[2].style.transform=\"translate(0, 0)\"\r\n      }\r\n    return (\r\n        <div className='navbar' >\r\n        <Link to='/'>\r\n          <div className='nav-wrapper'>\r\n            <p className='overlap text'>AppPlane</p>\r\n            <p className='overlap text2'>AppPlane</p>\r\n            <p className='overlap text3'>AppPlane</p>\r\n          </div>\r\n          </Link>\r\n\r\n          <Link to='/gitscout'>\r\n          <div className='nav-item nav-item__grey'>\r\n            Git Scout\r\n          </div>\r\n          </Link>\r\n\r\n          <Link to='/card'>\r\n          <div className='nav-item nav-item__b'>\r\n            Get a Card\r\n          </div>\r\n          </Link>\r\n\r\n          <Link to='/image'>\r\n          <div className='nav-item nav-item__p'>\r\n            Image Effects\r\n          </div>\r\n          </Link>\r\n\r\n          \r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HeaderComp;","import React from 'react'\r\nimport HeaderComp from '../component/HeaderComp'\r\nimport { Card,Icon } from 'semantic-ui-react'\r\n\r\n\r\nconst Homepage = () => {\r\n    return (\r\n        <div>\r\n            <HeaderComp/>\r\n            <div style={{paddingTop:\"30px\"}}>\r\n\r\n            \r\n            <Card.Group centered >\r\n                <Card color=\"olive\" link={true} raised={true} href='/gitscout'>\r\n                    <Card.Content style={{display:\"flex\", flexDirection:\"column\",justifyContent:\"center\",alignItems:\"center\",paddingTop:\"30px\"}}>\r\n                    \r\n                    <Card.Header > \r\n                    <Icon name='github' size =\"big\"/>\r\n                          Git Scout\r\n                    </Card.Header>\r\n                    <Card.Description style={{display:\"flex\", flexDirection:\"column\",justifyContent:\"center\",alignItems:\"center\",padding:\"20px\"}}> \r\n                        Search github repositories by their name or visualize contribution of a person to his github profile in a timeline view\r\n                            </Card.Description>\r\n                    \r\n                    </Card.Content>\r\n                </Card>\r\n\r\n\r\n                <Card color=\"teal\" link={true} raised={true} href='/card' >\r\n                    <Card.Content style={{display:\"flex\", flexDirection:\"column\",justifyContent:\"center\",alignItems:\"center\",paddingTop:\"30px\"}}>\r\n                    \r\n                    <Card.Header > \r\n                    <Icon name=\"vcard\" size =\"big\"/>\r\n                        Get a  Card\r\n                    </Card.Header>\r\n                    <Card.Description style={{display:\"flex\", flexDirection:\"column\",justifyContent:\"center\",alignItems:\"center\",padding:\"20px\"}}> \r\n                        Creates a simple social card based on info provided\r\n                            </Card.Description>\r\n                    \r\n                    </Card.Content>\r\n                </Card>\r\n\r\n                <Card color=\"orange\" link={true} raised={true} href='/image'>\r\n                    <Card.Content style={{display:\"flex\", flexDirection:\"column\",justifyContent:\"center\",alignItems:\"center\",paddingTop:\"30px\"}}>\r\n                    \r\n                    <Card.Header > \r\n                    <Icon name=\"images outline\" size =\"big\"/>\r\n                        Image Effects\r\n                    </Card.Header>\r\n                    <Card.Description style={{display:\"flex\", flexDirection:\"column\",justifyContent:\"center\",alignItems:\"center\",padding:\"20px\"}}> \r\n                        Use opencv to draw contour and apply various filters on your image with real-time capture .\r\n                    </Card.Description>\r\n                    \r\n                    </Card.Content>\r\n                </Card>\r\n\r\n            </Card.Group> \r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Homepage;","import React from 'react'\r\nimport { VerticalTimeline, VerticalTimelineElement } from \"react-vertical-timeline-component\";\r\nimport 'react-vertical-timeline-component/style.min.css';\r\nimport { Icon} from 'semantic-ui-react';\r\n\r\nconst TimelineElement = (repo) => {\r\n    let repos = repo.repositories;\r\n    \r\n    return(\r\n        <VerticalTimeline>\r\n            { repos.map((value,index)=>{\r\n                        return (\r\n                            <VerticalTimelineElement\r\n                                    key = {repos[index].id}\r\n                                    className=\"vertical-timeline-element--work \"\r\n                                    contentStyle={{ display:\"flex\",flexDirection:\"column\",background:\"white\", color: 'black' }}\r\n                                    contentArrowStyle={{ borderRight: '7px solid  rgb(33, 150, 243)' }}\r\n                                    date={value.created_at.slice(0,10).split(\"-\").reverse().join(\"-\")}\r\n                                    iconStyle={{display:\"flex\", background: \"#37474f\", justifyContent:\"center\",alignItems:\"center\",color: '#fff' }}\r\n                                    icon={<Icon size=\"big\" name =\"github\"/>}\r\n                                >\r\n                                    <div className=\"vertical-timeline-element-title baseStyle\" style={style.baseStyle}>{value.name}</div>\r\n                                    \r\n                                    <div style = {{ paddingTop:\"10px\",paddingBottom:\"10px\",}}>\r\n                                      {value.description}\r\n                                    </div>\r\n                                    \r\n                                    <div  style={style.bstyle}>\r\n                                \r\n                                            <a href={value.html_url} className=\"header\" target=\"_blank\" rel='noopener noreferrer'>\r\n                                                View Source Code\r\n                                            </a>\r\n                                    </div>\r\n                            </VerticalTimelineElement>\r\n                        ) \r\n                    })\r\n            }\r\n                    \r\n  </VerticalTimeline>\r\n    )\r\n}\r\n\r\nconst style = {\r\n    baseStyle:{\r\n        fontWeight:\"bold\",\r\n        display:\"flex\",\r\n        flexDirection:\"\",\r\n        flexWrap:\"wrap\",\r\n        paddingTop:\"10px\",\r\n        paddingBottom:\"10px\",\r\n\r\n    },\r\n    bstyle:{\r\n        maxWidth:\"140px\",\r\n        border:\"1px solid #000000\",\r\n        borderRadius:\"1.5em\",\r\n        textAlign:\"center\",\r\n        \"&:hover\": {\r\n            background: \"#efefef\"\r\n          }\r\n    }\r\n    \r\n    \r\n}\r\n\r\nexport default TimelineElement;\r\n\r\n","import React, { useState } from \"react\";\r\nimport 'react-vertical-timeline-component/style.min.css';\r\nimport TimelineElement from \"./TimelineElement\";\r\nimport { Card, Image } from \"semantic-ui-react\";\r\n\r\nconst SearchByProfile = () => {\r\n  const [data, setData] = useState({});\r\nconst [repositories, setRepositories] = useState([]);\r\n  const [username, setUsername] = useState(\"\");\r\n  \r\n\r\n  const onChangeHandler = (e) => {\r\n    setUsername(e.target.value);\r\n  };\r\n\r\n  const submitHandler = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const profile = await fetch(`https://api.github.com/users/${username}`);\r\n    const profileJson = await profile.json();\r\n    // console.log(profileJson);\r\n\r\n    const repo = await fetch(profileJson.repos_url);\r\n    const repoJson = await repo.json();\r\n    // console.log(repoJson);\r\n\r\n    if (profileJson) {\r\n      setData(profileJson);\r\n      setRepositories(repoJson);\r\n    }\r\n    \r\n  };\r\n\r\n  \r\n  return (\r\n    <div>\r\n      <div style={{ display:\"flex\",justifyContent:\"center\",flex:1,padding: 20 }}>\r\n        <div className=\"ui search\">\r\n          <div className=\"ui icon input\">\r\n            <i className=\"search icon\"></i>\r\n            <input\r\n              className=\"prompt\"\r\n              placeholder=\"search username here...\"\r\n              type=\"text\"\r\n              value={username}\r\n              onChange={onChangeHandler}\r\n            />\r\n          </div>\r\n\r\n          <button\r\n            className=\"ui primary button\"\r\n            type=\"submit\"\r\n            onClick={submitHandler}>\r\n\r\n                <i className=\"github icon\"></i>\r\n            Search\r\n          </button>\r\n          <div style= {{display:\"flex\",flexDirection:\"row\",}}>\r\n          {repositories.length >0 && <div style={{paddingTop:\"30px\",paddingBottom:\"30px\"}}>\r\n           <Card color=\"teal\" raised={true} >\r\n                    <Card.Content style={{display:\"flex\", flexDirection:\"column\",justifyContent:\"center\",alignItems:\"center\",paddingTop:\"30px\"}}>\r\n                    <Image\r\n                        floated='right'\r\n                        size='mini'\r\n                        src={data.avatar_url}\r\n                        alt={data.avatar_url}\r\n                      />\r\n                    \r\n                    <Card.Header > \r\n                    {data.name}\r\n                    </Card.Header>\r\n                    <Card.Description style={{display:\"flex\", flexDirection:\"column\",justifyContent:\"center\",alignItems:\"center\",padding:\"20px\"}}> \r\n                        {data.bio}\r\n                            </Card.Description>\r\n                    \r\n                    </Card.Content>\r\n                    <Card.Content extra style={{display:\"flex\", flexDirection:\"column\",justifyContent:\"center\",alignItems:\"center\",padding:\"20px\"}}>\r\n                    {data.location}\r\n                    </Card.Content>\r\n                </Card>\r\n\r\n              </div>}\r\n      \r\n          <div style={{paddingTop:\"30px\"}}>\r\n              {repositories.length >0  && <TimelineElement  repositories={repositories}/> }\r\n          </div>\r\n        </div>\r\n            \r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchByProfile;\r\n","import React from \"react\";\nimport { List, Loader} from 'semantic-ui-react'\n\n// https://api.github.com/search/repositories?q=html\nconst SearchByRepo = (props) => {\n  const [inputValue, setInputValue] = React.useState(\"\");\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [error, setError] = React.useState(false);\n  const [repos, setRepos] = React.useState([]);\n\n  React.useEffect(() => {\n    if (!inputValue) {\n      return;\n    }\n\n    setIsLoading(true);\n\n    fetch(\"https://api.github.com/search/repositories?q=\" + inputValue)\n      .then(response => {\n        return response.json();\n      })\n      .then(data => {\n        console.log(data);\n        setIsLoading(false);\n        setRepos(data.items);\n      })\n      .catch(err => {\n        setIsLoading(false);\n        setError(true);\n        console.error(err);\n      });\n  }, [inputValue]);\n\n  // const onChangeHandler = (e) => {\n  //   setInputValue(e.target.value);\n  // };\n\n  return (\n    <div >\n      <div className=\"ui search\" style={{ display:\"flex\",justifyContent:\"center\",flex:1,padding: 20 }}>\n        \n      <form\n        onSubmit={evt => {\n          evt.preventDefault();\n          setInputValue(evt.target.elements.query.value);\n        }}\n      >\n        <div className=\"ui icon input\">\n            <i className=\"search icon\"></i>\n            <input\n              type=\"text\"\n              className=\"prompt\"\n              placeholder=\"search repositories here...\"\n              name=\"query\"\n            />\n          </div>\n\n      </form>\n      </div>\n      <div >\n          {isLoading && <Loader active inline='centered' >Loading</Loader>\n          }\n          {error && (\n            <div style={{ display:\"flex\",justifyContent:\"center\",flex:1,padding: 20 }}>\n              Unexpected Error Occurred fetching data. Please try again later!\n            </div>\n          )}\n      </div>\n\n\n      <div  style={{ display:\"flex\",justifyContent:\"center\",flex:1,padding: 40 }}>\n      <List divided animated={true} >\n        {repos.map(repo => {\n          return (\n            <List.Item verticalAlign='middle'>\n              <List.Icon name='github' size='large' verticalAlign='middle' />\n              <List.Header as='a' href={repo.html_url} target=\"_blank\">{repo.name}</List.Header>\n              <List.Description >{repo.description}</List.Description>\n            </List.Item>\n          );\n        })}\n      </List>\n      </div>\n    </div>\n  );\n}\n\nexport default SearchByRepo;\n","import React, { useState } from 'react'\r\nimport HeaderComp from '../component/HeaderComp';\r\nimport { Card, Icon, Button} from 'semantic-ui-react';\r\nimport SearchByProfile from '../component/SearchByProfile';\r\nimport SearchByRepo from '../component/SearchByRepo';\r\n\r\nconst GitScout = () => {\r\n    \r\n    const [ui, setUI] = useState('')\r\n\r\n    return (\r\n        <div>\r\n            <HeaderComp/>\r\n\r\n            <Card.Group centered >\r\n                <Card color=\"teal\" raised={true}>\r\n                    <Card.Content style={{display:\"flex\", flexDirection:\"column\",justifyContent:\"center\",alignItems:\"center\",paddingTop:\"30px\"}}>\r\n                    \r\n                    <Card.Header > \r\n                    <Icon name='github' size =\"big\"/>\r\n                        Search  Github Repo \r\n                    </Card.Header>\r\n                    <Card.Description style={{display:\"flex\", flexDirection:\"column\",justifyContent:\"center\",alignItems:\"center\",padding:\"20px\"}}> \r\n                        This is to help you search github repositories by their name\r\n                            </Card.Description>\r\n                    \r\n                    </Card.Content>\r\n                    <Card.Content extra style={{display:\"flex\", flexDirection:\"column\",justifyContent:\"center\",alignItems:\"center\",padding:\"20px\"}}>\r\n                    <Button animated='vertical' color=\"#78909c\" onClick={()=>setUI(1)}>\r\n                        <Button.Content visible>try</Button.Content>\r\n                        <Button.Content hidden>\r\n                            <Icon name='github' />\r\n                        </Button.Content>\r\n                        </Button>\r\n                    </Card.Content>\r\n                </Card>\r\n\r\n\r\n                <Card color=\"teal\" raised={true}>\r\n                    <Card.Content style={{display:\"flex\", flexDirection:\"column\",justifyContent:\"center\",alignItems:\"center\",paddingTop:\"30px\"}}>\r\n                    \r\n                    <Card.Header > \r\n                    <Icon name='github' size =\"big\"/>\r\n                        Search Github Profiles \r\n                    </Card.Header>\r\n                    <Card.Description style={{display:\"flex\", flexDirection:\"column\",justifyContent:\"center\",alignItems:\"center\",padding:\"20px\"}}> \r\n                        This is to help you visualize contribution of a profile\r\n                            to their github account.\r\n                            </Card.Description>\r\n                    \r\n                    </Card.Content>\r\n                    <Card.Content extra style={{display:\"flex\", flexDirection:\"column\",justifyContent:\"center\",alignItems:\"center\",padding:\"20px\"}}>\r\n                    <Button animated='vertical' color=\"#78909c\" onClick={()=>setUI(2)}>\r\n                        <Button.Content visible>try</Button.Content>\r\n                        <Button.Content hidden>\r\n                            <Icon name='github' />\r\n                        </Button.Content>\r\n                        </Button>\r\n                    </Card.Content>\r\n                </Card>\r\n\r\n            </Card.Group> \r\n\r\n            <div>\r\n                {ui === 1 ? <SearchByRepo/> \r\n                : ui === 2 ? <SearchByProfile/> : null}\r\n                </div>       \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GitScout;\r\n","import React, { useState } from 'react'\r\nimport Webcam from 'react-webcam';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\nconst WebCamCapture = (props) => {\r\n    const [videoConstants, setvideoConstants] = useState({\r\n                                                            width: 1200,\r\n                                                            height: 720,\r\n                                                            facingMode: 'user'\r\n                                                        })\r\n\r\n    const webcamRef = React.useRef(null);\r\n\r\n    const captureImage = React.useCallback(\r\n        () => {\r\n          props.saveCapturedImage(webcamRef.current.getScreenshot());\r\n          \r\n        },\r\n        [props,webcamRef]\r\n      );\r\n\r\n    return (\r\n        <div>\r\n            <Grid container spacing={1}>\r\n                <Grid item xs={12}>\r\n                <Webcam\r\n                    ref={webcamRef}\r\n                    audio={false}\r\n                    height={350}\r\n                    screenshotFormat=\"image/jpeg\"\r\n                    width={350}\r\n                    videoConstraints={videoConstants}\r\n                    />\r\n                \r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                <Button variant=\"contained\" align=\"center\" color=\"primary\" onClick={() => captureImage()} >\r\n                    Capture\r\n                </Button>\r\n                </Grid>\r\n            </Grid>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WebCamCapture;\r\n","import React, { useState} from 'react'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { Divider, CardHeader } from '@material-ui/core';\r\nimport {api} from '../utils/Api';\r\n\r\nconst ImageFilter = (props) => {\r\n    const [effects, setEffects] = useState({\r\n        \"smoothening_effects\":[\r\n        {label: \"Blur\", key: \"blur\"},\r\n        {label: \"Gaussian Blur\", key: \"gaussian_blur\"},\r\n        {label: \"Median Blur\", key: \"median_blur\"},\r\n        {label: \"Bilateral Filter\", key: \"bilateral_filter\"},\r\n    ],\r\n    \"threshold_effects\": [\r\n        {label: \"Simple Threshold\", key: \"simple_threshold\"},\r\n        {label: \"Adaptive Threshold\", key: \"adaptive_threshold\"},\r\n        {label: \"Otsu's Threshold\", key: \"otasu_threshold\"},\r\n    ],\r\n    \"contour_effects\": [\r\n        {label: \"Find all contours\", key: \"find_all_contours\"},\r\n        {label: \"Find filtered contours\", key: \"find_filtered_contours\"},\r\n    ]\r\n    })\r\n\r\n\r\n    const [render, setrender] = useState({})\r\n\r\n\r\n    const applyEffect =  (effect) => {\r\n        api(\"apply_filter\", {\r\n          type: effect,\r\n          data: props.image_data\r\n        }).then((data) => {\r\n          const avail = render;\r\n          avail.effect = data.data;\r\n\r\n           setrender({effect:data.data});\r\n         });\r\n       }\r\n\r\n    const getFilterData = (effect) => {\r\n        if(render.effect) {\r\n          return render.effect;\r\n        }\r\n        return props.image_data;\r\n    }\r\n\r\n      if(!props.image_data){\r\n        return <div></div>\r\n      }\r\n      else{\r\n        const type = props.type\r\n        return (\r\n            <Grid container>\r\n\r\n                    {effects[type].map((effect, i) => {\r\n                        return (\r\n    \r\n                            <Grid item md={4} key={i}>\r\n                                <Card>\r\n                                  <CardHeader title={`${effect.label}   Image`}>\r\n                                    </CardHeader>\r\n                                    <CardContent>\r\n                                        <img src={getFilterData(effect.key)} alt=\"\" height=\"300px\" />\r\n                                        <Button variant=\"contained\" align=\"center\" color=\"secondary\" onClick={() => applyEffect(effect.key)} >\r\n                                            Generate\r\n                                        </Button>\r\n                                    </CardContent>\r\n                                </Card>\r\n                                <Divider />\r\n                            </Grid>\r\n                         )\r\n                    })}\r\n                </Grid>\r\n        )\r\n\r\n      }\r\n    \r\n}\r\n\r\nexport default ImageFilter\r\n","\r\nimport fetch from  'isomorphic-fetch';\r\nconst BASE_API_URL = \"http://localhost:4000/api/\"\r\n\r\nexport const api = (api_end_point, data) => {\r\n\r\n    return fetch(BASE_API_URL+api_end_point, \r\n        {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        }).then((response) => {\r\n            return response.json();\r\n        })\r\n\r\n\r\n        .catch((e) => {console.log(e)});\r\n}","import React, { useState } from 'react'\r\nimport HeaderComp from '../component/HeaderComp';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport WebCamCapture from '../component/WebCamCapture';\r\nimport ImageFilter from '../component/ImageFilter'\r\nimport imageDataURI from 'image-data-uri'\r\nimport {Button, Input} from '@material-ui/core';\r\n\r\nconst ImageEffects = (props) => {\r\n\r\n    const [inputType, setInputType] =  useState(\"\");\r\n    const [imageUrl, setImageUrl] =  useState(\"\");\r\n    const [image_data, setImage_data] = useState(null)\r\n\r\n    const saveCapturedImage = (data) => {\r\n        setImage_data(data)\r\n        \r\n    }\r\n\r\n    const saveUrlImage = () => {\r\n        imageDataURI.encodeFromURL(imageUrl)\r\n        .then(res => setImage_data(res))\r\n        .catch((e)=>console.log(e))\r\n    }\r\n\r\n    const handleUrlChange = (e) => {\r\n        setImageUrl(e.target.value);\r\n    }\r\n\r\n    const handleInputType = (value) => {\r\n        setImage_data(null);\r\n        setInputType(value);\r\n    }\r\n    \r\n\r\n\r\n    return (\r\n        <div>\r\n            <HeaderComp/>\r\n            <Container maxWidth=\"md\">\r\n                    \r\n\r\n                <Grid container spacing={2}>\r\n\r\n                    <Grid item xs={12}>\r\n                        <Card>\r\n                            <CardContent>\r\n                                    <Button \r\n                                        variant=\"outlined\" \r\n                                        color=\"primary\"\r\n                                        style={{marginRight:20}}\r\n                                        onClick={()=>handleInputType(\"url\")}>\r\n                                        <Typography>Input Image Url</Typography>\r\n                                    </Button>\r\n\r\n                                    <Button \r\n                                    variant=\"outlined\" \r\n                                    color=\"primary\"\r\n                                    onClick={()=>handleInputType(\"capture\")}\r\n                                    >\r\n                                        \r\n                                        Capture Image\r\n                                    </Button>\r\n                            \r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n\r\n                    {inputType === \"capture\" ?\r\n                    <Grid item xs={12}>\r\n                        <Card>\r\n                            <CardContent>\r\n                            <Typography variant=\"body\" color=\"textPrimary\"   component=\"p\">\r\n                                Play with Image\r\n                            </Typography>\r\n                            <Typography variant=\"h6\" color=\"textPrimary\" component=\"h6\">\r\n                                CAMERA PREVIEW\r\n                            </Typography>\r\n                            <WebCamCapture saveCapturedImage={(data) => saveCapturedImage(data)}/>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                    :inputType === \"url\" ? <Grid item xs={12}>\r\n                        <Card>\r\n                            <CardContent>\r\n                            \r\n                                    <Input \r\n                                    placeholder=\"paste image url\"\r\n                                    autoFocus={true}\r\n                                    type=\"url\"\r\n                                    value={imageUrl}\r\n                                    style={{marginRight:20}}\r\n                                    onChange={handleUrlChange}/>\r\n                                    \r\n                                    <Button\r\n                                        variant=\"outlined\"\r\n                                        color=\"primary\" \r\n                                        onClick={saveUrlImage}>\r\n                                        submit\r\n                                    </Button>\r\n\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>:null}\r\n                    \r\n                    {image_data && \r\n                    <>\r\n                    <Grid item xs={12}>\r\n                            <Card>\r\n                                <CardContent>\r\n                                    <Typography variant=\"h6\" color=\"textPrimary\" component=\"h6\">\r\n                                        SMOOTHENING FILTERS\r\n                                    </Typography>\r\n                                    <ImageFilter image_data={image_data} type=\"smoothening_effects\" />\r\n                                </CardContent>\r\n                            </Card>\r\n                        </Grid>\r\n                    <Grid item xs={12}>\r\n                            <Card>\r\n                                <CardContent>\r\n                                    <Typography variant=\"h6\" color=\"textPrimary\" component=\"h6\">\r\n                                        THRESHOLDING FILTERS\r\n                                    </Typography>\r\n                                    <ImageFilter image_data={image_data} type=\"threshold_effects\" />\r\n                                </CardContent>\r\n                            </Card>\r\n                        </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Card>\r\n                            <CardContent>\r\n                                <Typography variant=\"h6\" color=\"textPrimary\" component=\"h6\">\r\n                                    CONTOUR FILTERS\r\n                                </Typography>\r\n                                <ImageFilter image_data={image_data} type=\"contour_effects\" />\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                    </>}\r\n                </Grid>\r\n            </Container>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImageEffects;\r\n","import React, { useState } from 'react'\r\nimport HeaderComp from '../component/HeaderComp';\r\nimport { Card, Icon, Form, Button } from 'semantic-ui-react';\r\n\r\nconst GetCard = () => {\r\n\r\n    const [cardData, setcardData] = useState({})\r\n    const[ui,setUi] = useState(0);\r\n    const submitHandler = (e) => {\r\n        setUi(1);\r\n        e.preventDefault();\r\n        const data = new FormData(e.target);\r\n        setcardData({\"first_name\":data.get(\"firstname\"),\r\n                    \"last_name\":data.get(\"lastname\"),\r\n                    \"post_topic\":data.get(\"posttopic\"),\r\n                    \"post_desc\":data.get(\"postdesc\"),\r\n                    \"post_link\":data.get(\"postlink\"),\r\n                    \"post_auth\":data.get(\"postauth\")})\r\n\r\n       \r\n        \r\n      };\r\n    return (\r\n        <div>\r\n            <HeaderComp/>\r\n            {!ui && <div style={{display:\"flex\",justifyContent:\"center\",alignItems:\"center\"}}>\r\n                <Form onSubmit={submitHandler}>\r\n                    <Form.Group widths='equal'>\r\n                        <Form.Input  label='First name' name=\"firstname\" placeholder='First name' />\r\n                        <Form.Input  label='Last name' name=\"lastname\" placeholder='Last name' />\r\n                    </Form.Group>\r\n\r\n                    <Form.TextArea name=\"posttopic\"label='Post topic' placeholder='Post topic' />\r\n        \r\n\r\n                    <Form.TextArea name=\"postdesc\" label='Post Brief Description' placeholder='Post Description' />\r\n                    \r\n                    <Form.Group widths='equal'>\r\n                        <Form.Input  label='Post Link' name=\"postlink\" placeholder='Embed the link to original post' />\r\n                        <Form.Input   name=\"postauth\" label='Post Author' placeholder='author of  original post'/>\r\n                    </Form.Group>\r\n\r\n                    <Button type='submit'>\r\n                    <i className=\"vcard icon\"></i>Generate</Button>\r\n                </Form>\r\n            </div>}\r\n\r\n\r\n            {JSON.stringify(cardData) !== '{}' &&\r\n            <div style={{display:\"flex\",flexDirection:\"column\",justifyContent:\"center\",alignItems:\"center\",padding:\"30px\"}}>\r\n                <Card color=\"olive\" raised={true} link={true} href={cardData.post_link} target=\"_blank\" rel='noopener noreferrer' >\r\n                        <Card.Content style={{display:\"flex\", flexDirection:\"column\",justifyContent:\"center\",alignItems:\"center\",paddingTop:\"30px\"}}>\r\n                        \r\n                        <Card.Header > \r\n                        <Icon name='image' size =\"big\"/>\r\n                            {`${cardData.first_name} ${cardData.last_name} `}\r\n                            {cardData.post_topic}\r\n                        </Card.Header>\r\n                        <Card.Description style={{display:\"flex\", flexDirection:\"column\",justifyContent:\"center\",alignItems:\"center\",padding:\"20px\"}}> \r\n                            {cardData.post_desc}\r\n                \r\n                        </Card.Description>\r\n                        \r\n                </Card.Content>\r\n                </Card>\r\n                <Button onClick={()=>{\r\n                    setUi(0)\r\n                    setcardData({}) }}>Generate other card</Button>\r\n            </div>}\r\n            \r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GetCard;\r\n","import React, { Fragment } from 'react';\nimport './App.css';\nimport HeaderComp from './component/HeaderComp';\nimport {BrowserRouter as Router,Route,Switch} from 'react-router-dom'\nimport Homepage from './screens/Homepage';\nimport GitScout from './screens/GitScout';\nimport ImageEffects from './screens/ImageEffects';\nimport GetCard from './screens/GetCard';\n\n\nconst App = () => {\n\n  return (\n    <Fragment >\n      <Router>\n        <Switch>\n                <Route exact path=\"/\" component={Homepage}/>\n                <Route path=\"/gitscout\" component={GitScout}/>\n                <Route path=\"/gitscout\" component={GitScout}/>\n                <Route path=\"/image\" component={ImageEffects}/>\n                <Route path=\"/card\" component={GetCard}/>\n                <Route component={NotFound}/>\n\n        </Switch>\n        \n      </Router>\n    </Fragment>\n  );\n}\n\nexport const NotFound = () => {\n  return(\n    <>\n    <HeaderComp/>\n    <p style={{textAlign:\"center\",padding:\"30px\",fontSize:20,fontWeight:\"bold\"}}>Page not found</p>\n    </>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}